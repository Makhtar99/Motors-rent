services:
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: ./Dockerfile
      target: ${ENV_MODE}
    ports:
      - ${BACKEND_PORT}:5000
      - "5678:5678"
    volumes:
      - ./backend:/app
    env_file:
      - .env
      - .env.local
    networks:
      postgres_network:
      back_network:
      ollama-network:
    depends_on:
      postgres:
        condition: service_healthy
    

  ollama:
    image: ollama/ollama:latest
    ports:
      - 7869:11434
    volumes:
      - .:/code
      - ./ollama/ollama:/root/.ollama
    container_name: ollama
    pull_policy: always
    tty: true
    restart: always
    environment:
      - OLLAMA_KEEP_ALIVE=24h
      - OLLAMA_HOST=0.0.0.0
    networks:
      - ollama-network

  ollama-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: ollama-webui
    volumes:
      - ./ollama/ollama-webui:/app/backend/data
    depends_on:
      - ollama
    ports:
      - "8081:8080"
    environment: # https://docs.openwebui.com/getting-started/env-configuration#default_models
      - OLLAMA_BASE_URLS=http://host.docker.internal:7869 #comma separated ollama hosts
      - ENV=dev
      - WEBUI_AUTH=False
      - WEBUI_NAME=valiantlynx AI
      - WEBUI_URL=http://localhost:8080
      - WEBUI_SECRET_KEY=t0p-s3cr3t
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: unless-stopped
    networks:
      - ollama-network


  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
      target: ${ENV_MODE}
    restart: always
    ports:
      - ${FRONTEND_PORT}:5173
    env_file:
      - .env
      - .env.local
    volumes:
      - ./frontend:/var/www
      - /var/www/node_modules
    networks:
      - back_network
  postgres:
    image: postgres:17.2-alpine3.21
    container_name: postgres
    restart: always
    env_file:
      - .env
      - .env.local
    networks:
      postgres_network:
    ports:
      - "5432:5432"
    volumes:
      - ./database/postgres:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin", "-d", "groupe11"]
      interval: 5s
      retries: 5


  postgres-admin-tool:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    env_file:
      - .env
      - .env.local
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./database/pgadmin/servers.json:/pgadmin4/servers.json
    networks:
      postgres_network:
    depends_on:
      - postgres
      
networks:
  back_network:
    driver: bridge
  postgres_network:
    driver: bridge
  ollama-network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data: